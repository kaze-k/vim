""""""""""""""""""""""""""""""
"set vim config
""""""""""""""""""""""""""""""
set nu "设置行号
set showcmd "显示输入的快捷键
set wildmenu "命令选项
"set mouse=a "启用鼠标
set t_Co=256 "启用256色
filetype on "开启文件类型检测
filetype plugin on "开启文件类型检测
filetype plugin indent on "开启文件类型检测
filetype indent on "开启文件类型检测
set autoindent "缩进设置
set tabstop=4 "设置tab空格数
set shiftwidth=4 "设置tab长度
set softtabstop=4 "退格恢复
set relativenumber "相对行号
set cursorline "光标所在行高亮
set wrap "自动这行
set linebreak "在符号处折行
set scrolloff=5 "垂直滚动，光标距离行底和行顶
set showmatch "括号高亮
"set hlsearch "高亮匹配结果
set incsearch "搜索自动跳转到第一个
set ignorecase "搜索忽略大小写
set undofile "保留撤销历史
set undodir=~/.config/vim/.undo// "设置历史文件夹
set backupdir=~/.config/vim/.backup// "设置备份文件夹
set directory=~/.config/vim/.swp// "设置交换文件夹
set history=1000 "历史操作记录
set list "显示tab和空格
set listchars=tab:··,trail:· "设置tab和空格
set tw=0 "关闭vi相关兼容
set backspace=indent,eol,start "折叠代码
set foldmethod=indent "折叠代码
set foldlevel=99 "折叠代码
"set viminfo+=n~/.vim/.viminfo "将viminfo文件放入.vim/中
"colorscheme space-vim-dark "set colorscheme
let &t_ut='' "配色兼容终端
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif "关闭后打开回到之前的位置
"不同模式下光标形状不同(因终端而异)
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"


""""""""""""""""""""""""""""""
".vim/pack/themes
""""""""""""""""""""""""""""""
packadd! dracula
syntax enable
colorscheme dracula


""""""""""""""""""""""""""""""
"map config
""""""""""""""""""""""""""""""
"vim
map <c-q> :q<CR>
map <c-s> :bn<CR>

"vim-Plug
map <c-i> :PlugInstall<CR>
map <c-c> :PlugClean<CR>
map <c-u> :PlugUpdate<CR>
map <F4> :PlugUpgrade<CR>

"FZF
"map <c-f> :FZF<CR>

"ctrlp
map <c-p> :CtrlP<CR>

"nerdtree
map ff :NERDTreeToggle<CR>


"""""""""""""""""""""""""""""
"vim-visual-multi
"""""""""""""""""""""""""""""
let g:VM_theme = 'paper'


""""""""""""""""""""""""""""""
"snazzy
""""""""""""""""""""""""""""""
"colorscheme snazzy
"let g:SnazzyTransparent = 1 "透明
"light背景
"let g:lightline = {'colorscheme': 'snazzy',}


""""""""""""""""""""""""""""""
"vim-airline-themes
""""""""""""""""""""""""""""""
"let g:airline_theme = 'jellybeans'
"let g:airline_theme = 'violet'
let g:airline_theme = 'dracula'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_powerline_fonts = 1


""""""""""""""""""""""""""""""
"the nerdtree
""""""""""""""""""""""""""""""
" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 | let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

"autocmd VimEnter *  NERDTree | wincmd p  "打开vim自动打开nerdtree
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
let NERDTreeWinSize= 30
let g:NERDTreeShowlineNumber = 1
let g:NERDTreeHidden = 1
let NERDTreeDirArrows = 1
let NERDTreeMinimalUI = 1
let g:NERDTreeDirArrowExpandable = ''
let g:NERDTreeDirArrowCollapsible = ''
let g:NERDTreeChDirMode = 2


""""""""""""""""""""""""""""""
"rainbow
""""""""""""""""""""""""""""""
let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle
let g:rainbow_conf = {'separately': {'nerdtree': 0,}} "避免与vim-devicons冲突


""""""""""""""""""""""""""""""
"vim-devicons
""""""""""""""""""""""""""""""
let g:webdevicons_enable = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_conceal_nerdtree_brackets = 1
let g:webdevicons_enable_airline_tabline = 1
let g:webdevicons_enable_airline_statusline = 0
let g:webdevicons_enable_ctrlp = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 0


""""""""""""""""""""""""""""""
"vim-auto-popmenu
""""""""""""""""""""""""""""""
let g:apc_enable_ft = {'text':1, 'markdown':1, 'php':1,'python':1,'bash':1,'vim':1}
set cpt=.,k,w,b
set completeopt=menu,menuone,noselect
set shortmess+=c


""""""""""""""""""""""""""""""
"nerdtree-git-plugin
""""""""""""""""""""""""""""""
let g:NERDTreeGitStatusUntrackedFilesMode = 'all' " a heavy feature too. default: normal
let g:NERDTreeGitStatusShowClean = 1 " default: 0
let g:NERDTreeGitStatusConcealBrackets = 1 " default: 0
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "",
    \ 'Ignored'   : '',
    \ "Unknown"   : "?"
\ }


""""""""""""""""""""""""""""""
"indentline
""""""""""""""""""""""""""""""
let g:indentLine_char_list = ['|', '¦', '┆', '┊']
let g:indentLine_setColors = 0
let g:indentLine_color_term = 239
let g:indentLine_conceallevel = 4


""""""""""""""""""""""""""""""
"vim-nerdtree-syntax-highlight settings
""""""""""""""""""""""""""""""
"Highlight full name (not only icons). You need to add this if you don't have vim-devicons and want highlight.
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1

"Highlight full name (not only icons). You need to add this if you don't have vim-devicons and want highlight.
let g:NERDTreeHighlightFolders = 1

"highlights the folder name
let g:NERDTreeHighlightFoldersFullName = 1

"you can add these colors to your .vimrc to help customizing
let s:brown = "905532"
let s:aqua =  "3AFFDB"
let s:blue = "689FB6"
let s:darkBlue = "44788E"
let s:purple = "834F79"
let s:lightPurple = "834F79"
let s:red = "AE403F"
let s:beige = "F5C06F"
let s:yellow = "F09F17"
let s:orange = "D4843E"
let s:darkOrange = "F16529"
let s:pink = "CB6F6F"
let s:salmon = "EE6E73"
let s:green = "8FAA54"
let s:Turquoise = "40E0D0"
let s:lightGreen = "31B53E"
let s:white = "FFFFFF"
let s:rspec_red = "FE405F"
let s:git_orange = "F54D27"
let s:gray = "808A87"

let g:NERDTreeExtensionHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExtensionHighlightColor['o'] = s:gray " sets the color of o files to blue
let g:NERDTreeExtensionHighlightColor['h'] = s:blue " sets the color of h files to blue
let g:NERDTreeExtensionHighlightColor['c'] = s:green " sets the color of c files to blue
let g:NERDTreeExtensionHighlightColor['cpp'] = s:green " sets the color of cpp files to blue
let g:NERDTreeExtensionHighlightColor['c++'] = s:green " sets the color of c++ files to blue
let g:NERDTreeExtensionHighlightColor['sh'] = s:green " sets the color of sh files to blue 


"""""""""""""""""""""""""""""""""""""""""""""""""
"====================vim-plug==================="
"""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.config/vim/plugged')

"vim-airline
Plug 'vim-airline/vim-airline'

"vim-fugitive 在信息栏显示git分支
Plug 'tpope/vim-fugitive'

"vim-airline-themes
Plug 'vim-airline/vim-airline-themes'

"snazzy 主题
Plug 'connorholyday/vim-snazzy'

"nerdtree 文件夹面板
Plug 'scrooloose/nerdtree',{ 'on': 'NERDTreeToggle' }

"wildfire 智能选代码块
Plug 'gcmt/wildfire.vim'

"vim-surround 插入括号
Plug 'tpope/vim-surround'

"vim-visual-multi 多光标
Plug 'mg979/vim-visual-multi'

"nerdtree-git-plugin
Plug 'Xuyuanp/nerdtree-git-plugin'

"indentline
Plug 'yggdroot/indentline'

"fzf 模糊查找
"Plug 'junegunn/fzf'

"rainbow 彩虹括号
Plug 'luochen1990/rainbow'

"vim-cursorword 识别相同单词
Plug 'itchyny/vim-cursorword'

"ctrlp 文件搜索
 Plug 'ctrlpvim/ctrlp.vim'  

"vim-devicons
Plug 'ryanoasis/vim-devicons'

"vim-nerdtree-syntax-highlight
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

"auto-pairs 自动加括号
Plug 'chun-yang/auto-pairs'

"vim-auto-popmenu 文本提醒
Plug 'skywind3000/vim-auto-popmenu'

"vim-dict 提醒字典
Plug 'skywind3000/vim-dict'

call plug#end()
